/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        exclamation_sign {
            bindings = <&kp EXCLAMATION>;
            key-positions = <13 1>;
        };

        at_sign {
            bindings = <&kp AT_SIGN>;
            key-positions = <2 14>;
        };

        hash_sign {
            bindings = <&kp HASH>;
            key-positions = <15 3>;
        };

        dollar_sign {
            bindings = <&kp DOLLAR>;
            key-positions = <16 4>;
        };

        percent_sign {
            bindings = <&kp PERCENT>;
            key-positions = <17 5>;
        };

        and_sign {
            bindings = <&kp AMPERSAND>;
            key-positions = <6 18>;
        };

        asterisk_sign {
            bindings = <&kp ASTERISK>;
            key-positions = <7 19>;
        };

        open_prts {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <8 20>;
        };

        close_prts {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <9 21>;
        };

        question_sign {
            bindings = <&kp QUESTION>;
            key-positions = <10 22>;
        };

        open_brace_sign {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <18 30>;
        };

        close_brace_sign {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <19 31>;
        };

        open_brakets_sign {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <20 32>;
        };

        close_brakets_sign {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <21 33>;
        };
    };

    macros {
        retangular_print: retangular_print {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI &kp LCTRL &kp S>;
            label = "RETANGULAR_PRINT";
        };

        declare_var_go: declare_var_go {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp EQUAL &kp SPACE>;
            label = "DECLARE_VAR_GO";
        };

        save_on_vim: save_on_vim {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp COLON &kp W &kp ENTER>;
            label = "SAVE_ON_VIM";
        };

        save_and_quit_vim: save_and_quit_vim {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp COLON &kp W &kp SPACE &kp EXCL &kp S &kp U &kp D &kp O &kp SPACE &kp T &kp E &kp E &kp SPACE &kp PRCNT &kp ENTER>;
            label = "SAVE_AND_QUIT_VIM";
        };

        force_quit_vim: force_quit_vim {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp COLON &kp Q &kp EXCLAMATION &kp ENTER>;
            label = "FORCE_QUIT_VIM";
        };

        left_pane: left_pane {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(H)>;
            label = "LEFT_PANE";
        };

        right_pane: right_pane {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(L)>;
            label = "RIGHT_PANE";
        };

        bottom_pane: bottom_pane {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(J)>;
            label = "BOTTOM_PANE";
        };

        top_pane: top_pane {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(K)>;
            label = "TOP_PANE";
        };

        euro_sign: euro_sign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RALT &kp NUMBER_4>;
            label = "EURO_SIGN";
        };

        save_if_sudo_vim: save_if_sudo_vim {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp COLON &kp W &kp Q &kp ENTER>;
            label = "SAVE_IF_SUDO_VIM";
        };
    };

    behaviors {
        layer1_layer3: layer1_layer3 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER1_LAYER3";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mo 3>;
        };

        layer2_layer4: layer2_layer4 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER2_LAYER4";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&mo 4>;
        };

        hold_or_tap_behavior: hold_or_tap_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_OR_TAP_BEHAVIOR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <1000>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q                             &kp W                             &kp E                               &kp R                                 &kp T        &kp Y    &kp U                          &kp I                          &kp O                         &kp P                                 &kp BSPC
&kp LCTRL  &hold_or_tap_behavior LEFT_GUI A  &hold_or_tap_behavior LEFT_ALT S  &hold_or_tap_behavior LEFT_SHIFT D  &hold_or_tap_behavior LEFT_CONTROL F  &kp G        &kp H    &hold_or_tap_behavior RCTRL J  &hold_or_tap_behavior RSHFT K  &hold_or_tap_behavior RALT L  &hold_or_tap_behavior RIGHT_GUI SEMI  &kp SQT
&kp LSHFT  &kp Z                             &kp X                             &kp C                               &kp V                                 &kp B        &kp N    &kp M                          &kp COMMA                      &kp DOT                       &kp FSLH                              &kp ESC
                                                                               &kp LGUI                            &layer1_layer3                        &kp SPACE    &kp RET  &layer2_layer4                 &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1        &kp N2        &kp N3        &kp N4  &kp N5       &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&trans     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans       &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &kp DEL
&kp LSHFT  &bt BT_CLR    &trans        &trans        &trans  &trans       &kp HOME  &trans    &trans    &kp END    &trans  &trans
                                       &kp LGUI      &trans  &kp SPACE    &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL   &kp AT         &kp HASH    &kp DLLR      &kp PRCNT          &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp PG_UP  &kp PAGE_DOWN  &kp K_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans     &trans         &trans      &trans        &trans             &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                     &kp LGUI    &trans        &kp SPACE          &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&kp PRINTSCREEN  &trans  &trans  &kp LC(X)      &kp LC(C)  &kp LC(V)    &msc SCRL_LEFT  &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &msc SCRL_RIGHT  &trans
&trans           &trans  &trans  &kp LC(A)      &kp LC(W)  &kp LC(T)    &mkp LCLK       &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp RCLK        &trans
&trans           &trans  &trans  &kp LC(LS(Z))  &kp LC(Z)  &kp LC(R)    &trans          &trans          &trans          &trans           &trans           &trans
                                 &trans         &trans     &trans       &trans          &trans          &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans             &trans              &trans        &trans             &trans      &trans        &trans     &trans       &trans  &trans
&trans  &trans  &save_if_sudo_vim  &save_and_quit_vim  &save_on_vim  &force_quit_vim    &left_pane  &bottom_pane  &top_pane  &right_pane  &trans  &trans
&trans  &trans  &trans             &trans              &trans        &trans             &trans      &trans        &trans     &trans       &trans  &trans
                                   &trans              &trans        &trans             &trans      &trans        &trans
            >;
        };
    };
};
